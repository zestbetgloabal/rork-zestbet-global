name: Production Setup

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "CONFIRM" to run production setup'
        required: true
        default: ''

jobs:
  production-setup:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'CONFIRM'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run database migration
      run: |
        echo "üîÑ Starting database migration..."
        echo "Installing postgresql-client..."
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        
        # Check if DATABASE_URL is set
        echo "üîç Checking DATABASE_URL..."
        if [ -z "$DATABASE_URL" ]; then
          echo "‚ùå DATABASE_URL is not set!"
          exit 1
        fi
        echo "‚úÖ DATABASE_URL is set"
        
        # Use the existing SQL file
        echo "‚úÖ Running migration with psql..."
        cd backend/database
        
        if psql "$DATABASE_URL" -f migrate.sql; then
          echo "‚úÖ Migration successful!"
        else
          echo "‚ùå Migration failed"
          exit 1
        fi
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    - name: Test production API
      run: |
        chmod +x ./test-production-api.sh
        ./test-production-api.sh
      env:
        NODE_ENV: production
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_EXPIRES_IN: 7d
        EMAIL_FROM: info@zestapp.online
        EMAIL_FROM_NAME: ZestBet
        SMTP_HOST: smtp.strato.de
        SMTP_PORT: 587
        SMTP_SECURE: false
        SMTP_USER: info@zestapp.online
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
    
    - name: Verify production setup
      run: |
        chmod +x ./verify-production.sh
        ./verify-production.sh